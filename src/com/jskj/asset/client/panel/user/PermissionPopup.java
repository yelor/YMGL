/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.jskj.asset.client.panel.user;

import com.jskj.asset.client.AssetClientApp;
import com.jskj.asset.client.bean.entity.Appparam;
import com.jskj.asset.client.layout.BaseDialog;
import static com.jskj.asset.client.panel.user.PermissionPanel.resetPermessionPanel;
import java.awt.event.WindowEvent;
import java.util.ArrayList;
import java.util.List;
import org.jdesktop.application.Action;

/**
 *
 * @author 305027939
 */
public abstract class PermissionPopup extends BaseDialog {

    private List<Appparam> models;
    private List<Appparam> paramIdArray;
    private String depRoles;
    private List<Appparam> addPermessionArray;
    private List<Appparam> reducePermessionArray;

    /**
     * Creates new form PermissionPopup
     *
     * @param depRoles
     * @param canEditColumn
     * @param addPermessionArray
     * @param reducePermessionArray
     */
    public PermissionPopup(String depRoles, List canEditColumn, List<Appparam> _addPermessionArray, List<Appparam> _reducePermessionArray) {
        super();
        initComponents();
        this.depRoles = depRoles;
        models = AssetClientApp.getParamsByType("模块");
        paramIdArray = new ArrayList();
        addPermessionArray = new ArrayList();
        reducePermessionArray = new ArrayList();
        resetPermessionPanel(models, jTable1, depRoles, paramIdArray, canEditColumn, _addPermessionArray, _reducePermessionArray);
    }


    @Override
    protected void processWindowEvent(WindowEvent e){
       if(e.getID() == WindowEvent.WINDOW_CLOSING){
           close();
       }
    }
    
    public void getChangesValue() {

        int i = 0;
        for (final Appparam one : paramIdArray) {
            String desc = one.getAppparamDesc();

            Object obj = jTable1.getValueAt(i, 3);
            Boolean isCheck = (Boolean) obj;

            if (isCheck == true) {
                if (desc.indexOf(depRoles) < 0) {
                    addPermessionArray.add(one);
                }
            } else {
                if (desc.indexOf(depRoles) >= 0) {
                    reducePermessionArray.add(one);
                }
            }
            i++;
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable(){

            @Override
            public Class getColumnClass(int column) {
                switch (column) {
                    case 3:
                    return Boolean.class;
                    default:
                    return String.class;
                }
            }
        };
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(com.jskj.asset.client.AssetClientApp.class).getContext().getResourceMap(PermissionPopup.class);
        setTitle(resourceMap.getString("Form.title")); // NOI18N
        setAlwaysOnTop(true);
        setName("Form"); // NOI18N
        setUndecorated(true);

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jTable1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jTable1.setName("jTable1"); // NOI18N
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(com.jskj.asset.client.AssetClientApp.class).getContext().getActionMap(PermissionPopup.class, this);
        jButton1.setAction(actionMap.get("close")); // NOI18N
        jButton1.setText(resourceMap.getString("jButton1.text")); // NOI18N
        jButton1.setName("jButton1"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 572, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jButton1))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 422, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
         int selectedC = jTable1.getSelectedColumn();
        int selectedR = jTable1.getSelectedRow();
        int total = jTable1.getRowCount();
        if (selectedC == 3) {
            Object obj = jTable1.getValueAt(selectedR, selectedC);
            Boolean isCheck = (Boolean) obj;
            if (!jTable1.getValueAt(selectedR, 0).toString().equals("")) {
                for (int j = selectedR; j < total; j++) {
                    if (j + 1 < total) {
                        if (jTable1.getValueAt(j + 1, 0).toString().equals("")) {
                            jTable1.setValueAt(isCheck, j + 1, 3);
                        } else {
                            break;
                        }
                    }
                }
            } else if (!jTable1.getValueAt(selectedR, 1).toString().equals("")) {
                for (int j = selectedR; j < total; j++) {
                    if (j + 1 < total) {
                        if (jTable1.getValueAt(j + 1, 1).toString().equals("") && jTable1.getValueAt(j + 1, 0).toString().equals("")) {
                            jTable1.setValueAt(isCheck, j + 1, 3);
                        } else {
                            break;
                        }
                    }
                }
            }
        }
    }//GEN-LAST:event_jTable1MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PermissionPopup.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PermissionPopup.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PermissionPopup.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PermissionPopup.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
//
//        /* Create and display the dialog */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                PermissionPopup dialog = new PermissionPopup(new javax.swing.JFrame(), true);
//                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
//                    @Override
//                    public void windowClosing(java.awt.event.WindowEvent e) {
//                        System.exit(0);
//                    }
//                });
//                dialog.setVisible(true);
//            }
//        });
    }

    public abstract void getChangesValue(List<Appparam> addPermessionArray, List<Appparam> reducePermessionArray);

    @Action
    public void close() {
        getChangesValue();
        getChangesValue(addPermessionArray, reducePermessionArray);
        this.dispose();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
