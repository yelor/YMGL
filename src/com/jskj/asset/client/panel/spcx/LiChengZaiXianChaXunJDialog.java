/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.jskj.asset.client.panel.spcx;

import com.jskj.asset.client.bean.entity.MyTaskEntity;
import com.jskj.asset.client.layout.AssetMessage;
import com.jskj.asset.client.layout.BaseDialog;
import com.jskj.asset.client.layout.BaseTextField;
import com.jskj.asset.client.layout.DetailPanel;
import com.jskj.asset.client.layout.IPopupBuilder;
import com.jskj.asset.client.layout.ws.CommFindEntity;
import com.jskj.asset.client.panel.message.DanjuMouseAdapter;
import com.jskj.asset.client.panel.spcx.task.LichengZaixianFindTask;
import com.jskj.asset.client.panel.ymgl.*;
import com.jskj.asset.client.util.BindTableHelper;
import com.jskj.asset.client.util.DateChooser;
import java.awt.Dimension;
import java.awt.Point;
import java.awt.Toolkit;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.HashMap;
import java.util.List;
import javax.swing.Popup;
import javax.swing.PopupFactory;
import org.apache.log4j.Logger;
import org.jdesktop.application.Action;
import org.jdesktop.application.Task;

/**
 *
 * @author huiqi
 */
public class LiChengZaiXianChaXunJDialog extends BaseDialog {
    
    private final static Logger logger = Logger.getLogger(LiChengZaiXianChaXunJDialog.class);
    private final BindTableHelper<MyTaskEntity> bindTable;
    int resultCount = 0;
    BaseTextField jTextFieldStartInit;
    BaseTextField jTextFieldEndInit;
    private final HashMap parameterMap;
    private DetailPanel detailPanel;
    private List<MyTaskEntity> resultArray;

    /**
     * Creates new form yimiaoyanshouJDialog
     */
    public LiChengZaiXianChaXunJDialog() {
        super();
        jTextFieldStartInit = new BaseTextField();
        jTextFieldEndInit = new BaseTextField();
        jTextFieldStartInit.registerIcon(IPopupBuilder.TYPE_DATE_CLICK);
        jTextFieldEndInit.registerIcon(IPopupBuilder.TYPE_DATE_CLICK);
        
        DateChooser dateChooser1 = DateChooser.getInstance("yyyy-MM-dd HH:mm:ss");
        dateChooser1.register(jTextFieldStartInit);
        
        DateChooser dateChooser2 = DateChooser.getInstance("yyyy-MM-dd HH:mm:ss");
        dateChooser2.register(jTextFieldEndInit);
        initComponents();
        parameterMap = new HashMap();
        bindTable = new BindTableHelper<MyTaskEntity>(jTable4, new ArrayList<MyTaskEntity>());
        bindTable.createTable(new String[][]{{"shenqingdanId", "申请单ID"}, {"submitDate", "提出时间"}, {"danjuleixing", "单据类型"}, {"owner", "制单人"},
        {"department", "部门"}});
        bindTable.setDateType(2);
        bindTable.bind().setColumnWidth(new int[]{0, 200}, new int[]{1, 200}).setRowHeight(25);
        detailPanel = new DetailPanel();
        
        jTable4.addMouseListener(new DanjuMouseAdapter(true){

            @Override
            public String getShenqingdanID() {
               MyTaskEntity entity= selectedTaskEntity();
               if(entity!=null){
                  return entity.getShenqingdanId();
               }
               return null;
            }
        });
        
        jTable4.setToolTipText("双击打开单据.");
    }
    
    class JLabelComparator implements Comparator<MyTaskEntity> {
        
        @Override
        public int compare(MyTaskEntity o1, MyTaskEntity o2) {
            long o1Label = o1.getSubmitDate().getTime();
            long o2Label = o2.getSubmitDate().getTime();
            if (o1Label > o2Label) {
                return -1;
            } else if (o1Label == o2Label) {
                return 0;
            } else {
                return 1;
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToolBar1 = new javax.swing.JToolBar();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTable4 = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex, int ColIndex){
                return false;
            }
        };
        jLabel2 = new javax.swing.JLabel();
        jTextFieldStart = jTextFieldStartInit;
        jLabel3 = new javax.swing.JLabel();
        jTextFieldEnd = jTextFieldEndInit;

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(com.jskj.asset.client.AssetClientApp.class).getContext().getResourceMap(LiChengZaiXianChaXunJDialog.class);
        setTitle(resourceMap.getString("Form.title")); // NOI18N
        setName("Form"); // NOI18N
        setResizable(false);

        jToolBar1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);
        jToolBar1.setBorderPainted(false);
        jToolBar1.setName("jToolBar1"); // NOI18N
        jToolBar1.setOpaque(false);

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(com.jskj.asset.client.AssetClientApp.class).getContext().getActionMap(LiChengZaiXianChaXunJDialog.class, this);
        jButton1.setAction(actionMap.get("findProcess")); // NOI18N
        jButton1.setIcon(resourceMap.getIcon("jButton1.icon")); // NOI18N
        jButton1.setText(resourceMap.getString("jButton1.text")); // NOI18N
        jButton1.setBorder(null);
        jButton1.setBorderPainted(false);
        jButton1.setFocusable(false);
        jButton1.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jButton1.setName("jButton1"); // NOI18N
        jButton1.setOpaque(false);
        jToolBar1.add(jButton1);

        jButton2.setAction(actionMap.get("detail")); // NOI18N
        jButton2.setIcon(resourceMap.getIcon("jButton2.icon")); // NOI18N
        jButton2.setText(resourceMap.getString("jButton2.text")); // NOI18N
        jButton2.setBorder(null);
        jButton2.setBorderPainted(false);
        jButton2.setFocusable(false);
        jButton2.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jButton2.setName("jButton2"); // NOI18N
        jButton2.setOpaque(false);
        jToolBar1.add(jButton2);

        jScrollPane5.setName("jScrollPane5"); // NOI18N

        jTable4.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jTable4.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_LAST_COLUMN);
        jTable4.setColumnSelectionAllowed(false);
        jTable4.setName("jTable4"); // NOI18N
        jTable4.setShowVerticalLines(false);
        jScrollPane5.setViewportView(jTable4);
        if (jTable4.getColumnModel().getColumnCount() > 0) {
            jTable4.getColumnModel().getColumn(0).setHeaderValue(resourceMap.getString("jTable4.columnModel.title0")); // NOI18N
            jTable4.getColumnModel().getColumn(1).setHeaderValue(resourceMap.getString("jTable4.columnModel.title1")); // NOI18N
            jTable4.getColumnModel().getColumn(2).setHeaderValue(resourceMap.getString("jTable4.columnModel.title2")); // NOI18N
            jTable4.getColumnModel().getColumn(3).setHeaderValue(resourceMap.getString("jTable4.columnModel.title10")); // NOI18N
            jTable4.getColumnModel().getColumn(4).setHeaderValue(resourceMap.getString("jTable4.columnModel.title5")); // NOI18N
            jTable4.getColumnModel().getColumn(5).setHeaderValue(resourceMap.getString("jTable4.columnModel.title6")); // NOI18N
        }

        jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N

        jTextFieldStart.setText(resourceMap.getString("jTextFieldStart.text")); // NOI18N
        jTextFieldStart.setName("jTextFieldStart"); // NOI18N

        jLabel3.setText(resourceMap.getString("jLabel3.text")); // NOI18N
        jLabel3.setName("jLabel3"); // NOI18N

        jTextFieldEnd.setText(resourceMap.getString("jTextFieldEnd.text")); // NOI18N
        jTextFieldEnd.setName("jTextFieldEnd"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane5)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldStart, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldEnd, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(97, 97, 97))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(jTextFieldStart, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3)
                        .addComponent(jTextFieldEnd, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 483, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(YiMiaoLingGouJiHuaFenXiJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(YiMiaoLingGouJiHuaFenXiJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(YiMiaoLingGouJiHuaFenXiJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(YiMiaoLingGouJiHuaFenXiJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

    }
    
    @Action
    public Task findProcess() {
        String startDate = jTextFieldStart.getText();
        String endDate = jTextFieldEnd.getText();
        parameterMap.put("startDate", startDate);
        parameterMap.put("endDate", endDate);
        return new LichengZaixianFindTask(parameterMap) {
            
            @Override
            public void responseResult(CommFindEntity<MyTaskEntity> response) {
                logger.debug("get current size:" + response.getResult().size());
                resultArray = response.getResult();
                JLabelComparator comparator = new JLabelComparator();
                Collections.sort(resultArray, comparator);
                bindTable.refreshData(resultArray);

            }
            
        };
    }
    
    private MyTaskEntity selectedTaskEntity() {
        if (jTable4.getSelectedRow() >= 0) {
            if (resultArray != null) {
                return resultArray.get(jTable4.getSelectedRow());
            }
        }
        return null;
    }
    
    @Action
    public void detail() {
        
        if (isShow) {
            hidePanel();
        } else {
            MyTaskEntity entity = selectedTaskEntity();
            if (entity == null) {
                AssetMessage.ERRORSYS("请选择数据!");
                return;
            }
            showPanel(entity.getContext());
        }
    }
    
    private Popup pop;
    private boolean isShow;
    
    public void hidePanel() {
        if (pop != null) {
            isShow = false;
            pop.hide();
            pop = null;
        }
    }
    
    public void showPanel(String context) {
        if (pop != null) {
            pop.hide();
        }
        Point p = jTable4.getLocationOnScreen();
        
        int selectedRow = jTable4.getSelectedRow();
        
        Dimension size = Toolkit.getDefaultToolkit().getScreenSize();
        
        int selectedColumnX = p.x;
        int selectedColumnY = p.y + (selectedRow + 1) * jTable4.getRowHeight();
        
        int popHeight = detailPanel.getPreferredSize().height;
        int popWitdh = detailPanel.getPreferredSize().width;
        
        if ((selectedColumnY + popHeight) > size.getHeight()) {
            selectedColumnY = selectedColumnY - detailPanel.getHeight() - jTable4.getRowHeight();
        }
        
        if ((selectedColumnX + popWitdh) > size.getWidth()) {
            selectedColumnX = selectedColumnX - detailPanel.getWidth();
        }
        
        pop = PopupFactory.getSharedInstance().getPopup(jTable4, detailPanel, selectedColumnX, selectedColumnY);
        detailPanel.setText(context);
        pop.show();
        isShow = true;
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTable jTable4;
    private javax.swing.JTextField jTextFieldEnd;
    private javax.swing.JTextField jTextFieldStart;
    private javax.swing.JToolBar jToolBar1;
    // End of variables declaration//GEN-END:variables
}
