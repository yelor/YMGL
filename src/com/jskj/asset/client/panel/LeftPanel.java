/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.jskj.asset.client.panel;

import com.jskj.asset.client.layout.AssetArrayNodes;
import com.jskj.asset.client.layout.AssetMessage;
import com.jskj.asset.client.layout.AssetNode;
import com.jskj.asset.client.layout.AssetTreeModel;
import com.jskj.asset.client.layout.AssetTreeNode;
import com.jskj.asset.client.layout.BaseTreePane;
import java.util.List;
import org.apache.log4j.Logger;
import org.jdesktop.application.Action;
import org.jdesktop.application.Task;

/**
 *
 * @author 305027939
 */
public class LeftPanel extends BaseTreePane {

    private final static Logger logger = Logger.getLogger(LeftPanel.class);

    /**
     * Creates new form LeftPanel
     */
    public LeftPanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        navigatorTree = new javax.swing.JTree();
        jToolBar1 = new javax.swing.JToolBar();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(com.jskj.asset.client.AssetClientApp.class).getContext().getResourceMap(LeftPanel.class);
        navigatorTree.setFont(resourceMap.getFont("navigatorTree.font")); // NOI18N
        javax.swing.tree.DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("[Loading]");
        navigatorTree.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        navigatorTree.setAlignmentX(3.0F);
        navigatorTree.setAlignmentY(3.0F);
        navigatorTree.setAutoscrolls(true);
        navigatorTree.setName("navigatorTree"); // NOI18N
        navigatorTree.setRootVisible(false);
        navigatorTree.setRowHeight(25);
        navigatorTree.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                navigatorTreeMouseClicked(evt);
            }
        });

        setName("Form"); // NOI18N

        jToolBar1.setBackground(resourceMap.getColor("jToolBar1.background")); // NOI18N
        jToolBar1.setBorder(null);
        jToolBar1.setFloatable(false);
        jToolBar1.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jToolBar1.setRollover(true);
        jToolBar1.setName("jToolBar1"); // NOI18N

        jButton1.setIcon(resourceMap.getIcon("jButton1.icon")); // NOI18N
        jButton1.setText(resourceMap.getString("jButton1.text")); // NOI18N
        jButton1.setBorder(null);
        jButton1.setBorderPainted(false);
        jButton1.setContentAreaFilled(false);
        jButton1.setFocusable(false);
        jButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton1.setIconTextGap(0);
        jButton1.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButton1.setName("jButton1"); // NOI18N
        jButton1.setPressedIcon(resourceMap.getIcon("jButton1.pressedIcon")); // NOI18N
        jButton1.setRolloverIcon(resourceMap.getIcon("jButton1.rolloverIcon")); // NOI18N
        jButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(jButton1);

        jButton2.setIcon(resourceMap.getIcon("jButton2.icon")); // NOI18N
        jButton2.setBorder(null);
        jButton2.setBorderPainted(false);
        jButton2.setContentAreaFilled(false);
        jButton2.setFocusable(false);
        jButton2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton2.setIconTextGap(0);
        jButton2.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButton2.setName("jButton2"); // NOI18N
        jButton2.setPressedIcon(resourceMap.getIcon("jButton2.pressedIcon")); // NOI18N
        jButton2.setRolloverIcon(resourceMap.getIcon("jButton2.rolloverIcon")); // NOI18N
        jButton2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(jButton2);

        jButton3.setIcon(resourceMap.getIcon("jButton3.icon")); // NOI18N
        jButton3.setBorder(null);
        jButton3.setBorderPainted(false);
        jButton3.setContentAreaFilled(false);
        jButton3.setFocusable(false);
        jButton3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton3.setIconTextGap(0);
        jButton3.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButton3.setName("jButton3"); // NOI18N
        jButton3.setPressedIcon(resourceMap.getIcon("jButton3.pressedIcon")); // NOI18N
        jButton3.setRolloverIcon(resourceMap.getIcon("jButton3.rolloverIcon")); // NOI18N
        jButton3.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(jButton3);

        jButton4.setIcon(resourceMap.getIcon("jButton4.icon")); // NOI18N
        jButton4.setBorder(null);
        jButton4.setBorderPainted(false);
        jButton4.setContentAreaFilled(false);
        jButton4.setFocusable(false);
        jButton4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton4.setIconTextGap(0);
        jButton4.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButton4.setName("jButton4"); // NOI18N
        jButton4.setPressedIcon(resourceMap.getIcon("jButton4.pressedIcon")); // NOI18N
        jButton4.setRolloverIcon(resourceMap.getIcon("jButton4.rolloverIcon")); // NOI18N
        jButton4.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(jButton4);

        jButton5.setIcon(resourceMap.getIcon("jButton5.icon")); // NOI18N
        jButton5.setBorder(null);
        jButton5.setBorderPainted(false);
        jButton5.setContentAreaFilled(false);
        jButton5.setFocusable(false);
        jButton5.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton5.setIconTextGap(0);
        jButton5.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButton5.setName("jButton5"); // NOI18N
        jButton5.setPressedIcon(resourceMap.getIcon("jButton5.pressedIcon")); // NOI18N
        jButton5.setRolloverIcon(resourceMap.getIcon("jButton5.rolloverIcon")); // NOI18N
        jButton5.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(jButton5);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jToolBar1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jToolBar1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 323, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void navigatorTreeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_navigatorTreeMouseClicked
        AssetTreeNode selectedNode = (AssetTreeNode) navigatorTree.getLastSelectedPathComponent();  //获取鼠标点击点
        if (selectedNode == null) {
            return;//如果不是树上的节点
        }
        if (selectedNode.isLeaf() && evt.getClickCount() == 2) { //确定是叶节点且是双//击事件。
            Task task = new OpenTabTask(selectedNode);
            task.execute();
            logger.debug("------------>TabPane:" + disTabCount);
        }
    }//GEN-LAST:event_navigatorTreeMouseClicked

    /**
     * @param navigatorTree the navigatorTree to set
     */
    public void setNavigatorTree(javax.swing.JTree navigatorTree) {
        this.navigatorTree = navigatorTree;
    }

    public javax.swing.JTree getNavigatorTree() {
        return navigatorTree;
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JTree navigatorTree;
    // End of variables declaration//GEN-END:variables

    @Action
    @Override
    public Task reload() {
        return new NavigatorPanelTask();
    }

    class NavigatorPanelTask extends NavigatorTask {

        @Override
        public void onSucceeded(Object object) {
            if (object instanceof Exception) {
                Exception e = (Exception) object;
                AssetMessage.ERRORSYS("读取失败:" + e.getMessage());
                logger.error(e);
            } else {
                AssetArrayNodes nodes = (AssetArrayNodes) object;

                navigatorTree.setRootVisible(false);
                navigatorTree.setModel(new AssetTreeModel(getTreeNode(new AssetTreeNode(nodes.getTopNode()), nodes.getNodes())));

            }
        }

    }

    private AssetTreeNode getTreeNode(AssetTreeNode parent, List<AssetNode> nodes) {
        // DefaultMutableTreeNode treeNodeChild = null;
        if (nodes != null) {
            for (AssetNode node : nodes) {
                //DefaultMutableTreeNode treeNodeChild = new DefaultMutableTreeNode(node.getNodeName());
                AssetTreeNode treeNodeChild = new AssetTreeNode(node);
                List<AssetNode> nodeChild = node.getChildNode();
                if (nodeChild != null) {
                    getTreeNode(treeNodeChild, nodeChild);
                }
                parent.add(treeNodeChild);
            }
        }
        return parent;
    }

    @Override
    public Task reload(Object param) {
        return null;
    }
}
