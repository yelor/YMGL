/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * MainWorkPane.java
 *
 * Created on Dec 16, 2010, 10:14:08 AM
 */
package com.jskj.asset.client.panel;

import com.jskj.asset.client.layout.BasePanel;
import com.jskj.asset.client.util.ClassHelper;
import java.util.HashMap;
import org.apache.log4j.Logger;
import org.jdesktop.application.Task;

/**
 *
 * @author woderchen
 */
public class MainWorkPane extends BasePanel {

    private final static Logger logger = Logger.getLogger(MainWorkPane.class);
    private final HashMap<String, BasePanel> treePanesMap;

    /**
     * Creates new form MainPane
     */
    public MainWorkPane() {
        initComponents();
        treePanesMap = new HashMap<String, BasePanel>();
    }

    public void changeTreeView(String VIEW_TREE) {
        try {
            BasePanel treePane = treePanesMap.get(VIEW_TREE);
            if (treePane == null) {
                getLeftTree().setViewportView(null);
                ClassHelper<BasePanel> classHelper = new ClassHelper<BasePanel>(VIEW_TREE, new Class[]{});
                BasePanel TablePanel = classHelper.newInstance(new Object[]{});
                getLeftTree().setViewportView(TablePanel);

                treePanesMap.put(VIEW_TREE, TablePanel);

                Task task = (Task) classHelper.executeMethod("reload");
                if (task != null) {
                    task.execute();
                }
            } else {
                getLeftTree().setViewportView(treePane);
                Task task = treePane.reload();
                if (task != null) {
                    task.execute();
                }
            }
        } catch (Exception ex) {
            ex.printStackTrace();
            logger.error(ex);
        }
    }
    public void changeTreeView(String VIEW_TREE, Object parameterValue, Class<?> parameterTypes) {
        try {
            BasePanel treePane = treePanesMap.get(VIEW_TREE);
            if (treePane == null) {
                getLeftTree().setViewportView(null);
                ClassHelper<BasePanel> classHelper = new ClassHelper<BasePanel>(VIEW_TREE, new Class[]{});
                BasePanel TablePanel = classHelper.newInstance(new Object[]{});
                getLeftTree().setViewportView(TablePanel);

                treePanesMap.put(VIEW_TREE, TablePanel);

                Task task = (Task) classHelper.executeMethod("reload", parameterValue, parameterTypes);
                if (task != null) {
                    task.execute();
                }
            } else {
                getLeftTree().setViewportView(treePane);
                Task task = treePane.reload(parameterValue);
                if (task != null) {
                    task.execute();
                }
            }
        } catch (Exception ex) {
            ex.printStackTrace();
            logger.error(ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPaneMain = new javax.swing.JPanel();
        jSplitMain = new javax.swing.JSplitPane();
        LeftPane = new javax.swing.JPanel();
        leftTree = new javax.swing.JScrollPane();
        rightPane = new javax.swing.JTabbedPane();

        setName("Form"); // NOI18N

        jPaneMain.setName("jPaneMain"); // NOI18N

        jSplitMain.setBorder(null);
        jSplitMain.setDividerLocation(220);
        jSplitMain.setDividerSize(8);
        jSplitMain.setMinimumSize(new java.awt.Dimension(300, 25));
        jSplitMain.setName("jSplitMain"); // NOI18N

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(com.jskj.asset.client.AssetClientApp.class).getContext().getResourceMap(MainWorkPane.class);
        LeftPane.setBackground(resourceMap.getColor("LeftPane.background")); // NOI18N
        LeftPane.setName("LeftPane"); // NOI18N

        leftTree.setBackground(resourceMap.getColor("leftTree.background")); // NOI18N
        leftTree.setBorder(null);
        leftTree.setFont(resourceMap.getFont("leftTree.font")); // NOI18N
        leftTree.setName("leftTree"); // NOI18N

        javax.swing.GroupLayout LeftPaneLayout = new javax.swing.GroupLayout(LeftPane);
        LeftPane.setLayout(LeftPaneLayout);
        LeftPaneLayout.setHorizontalGroup(
            LeftPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(leftTree, javax.swing.GroupLayout.DEFAULT_SIZE, 220, Short.MAX_VALUE)
        );
        LeftPaneLayout.setVerticalGroup(
            LeftPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(leftTree, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 463, Short.MAX_VALUE)
        );

        jSplitMain.setLeftComponent(LeftPane);

        rightPane.setFont(resourceMap.getFont("rightPane.font")); // NOI18N
        rightPane.setName("rightPane"); // NOI18N
        jSplitMain.setRightComponent(rightPane);

        javax.swing.GroupLayout jPaneMainLayout = new javax.swing.GroupLayout(jPaneMain);
        jPaneMain.setLayout(jPaneMainLayout);
        jPaneMainLayout.setHorizontalGroup(
            jPaneMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitMain, javax.swing.GroupLayout.DEFAULT_SIZE, 663, Short.MAX_VALUE)
        );
        jPaneMainLayout.setVerticalGroup(
            jPaneMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 663, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPaneMain, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 463, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPaneMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel LeftPane;
    private javax.swing.JPanel jPaneMain;
    private javax.swing.JSplitPane jSplitMain;
    private javax.swing.JScrollPane leftTree;
    private javax.swing.JTabbedPane rightPane;
    // End of variables declaration//GEN-END:variables

    @Override
    public Task reload() {
        return new OpenTabTask("首页", new ToppagePane(), true);
    }

    @Override
    public Task reload(Object param) {
        throw null;
    }

    /**
     * @return the rightPane
     */
    public javax.swing.JTabbedPane getRightPane() {
        return rightPane;
    }

    /**
     * @return the leftTree
     */
    public javax.swing.JScrollPane getLeftTree() {
        return leftTree;
    }
}
