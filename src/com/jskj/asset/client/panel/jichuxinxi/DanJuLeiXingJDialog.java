/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.jskj.asset.client.panel.jichuxinxi;

import com.jskj.asset.client.AssetClientApp;
import com.jskj.asset.client.bean.entity.Danjuleixingtb;
import com.jskj.asset.client.bean.entity.DanjuleixingtbFindEntity;
import com.jskj.asset.client.layout.AssetMessage;
import com.jskj.asset.client.panel.jichuxinxi.task.DanjuleixingTask;
import com.jskj.asset.client.panel.jichuxinxi.task.DanjuleixingUpdateTask;
import com.jskj.asset.client.util.BindTableHelper;
import java.util.List;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import org.apache.log4j.Logger;
import org.jdesktop.application.Action;
import org.jdesktop.application.Task;
import org.jdesktop.beansbinding.BindingGroup;

/**
 *
 * @author huiqi
 */
public class DanJuLeiXingJDialog extends javax.swing.JDialog {

    private static final Logger logger = Logger.getLogger(DanJuLeiXingJDialog.class);

    private final DanJuLeiXingJDialog danJuLeiXingJDialog;

    private int pageIndex;

    private int count;

    private List<Danjuleixingtb> danjuleixings;

    private DanJuLeiXingInfoJDialog danJuLeiXingInfoJDialog;

    /**
     * Creates new form DanWeiJDialog
     */
    public DanJuLeiXingJDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        new RefureTask(0).execute();
        danJuLeiXingJDialog = this;
        pageIndex = 1;
        count = 0;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableDanjuleixing = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(com.jskj.asset.client.AssetClientApp.class).getContext().getResourceMap(DanJuLeiXingJDialog.class);
        setTitle(resourceMap.getString("Form.title")); // NOI18N
        setName("Form"); // NOI18N
        setResizable(false);

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setName("jPanel1"); // NOI18N

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        jTableDanjuleixing.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jTableDanjuleixing.setName("jTableDanjuleixing"); // NOI18N
        jScrollPane1.setViewportView(jTableDanjuleixing);

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(com.jskj.asset.client.AssetClientApp.class).getContext().getActionMap(DanJuLeiXingJDialog.class, this);
        jButton1.setAction(actionMap.get("exit")); // NOI18N
        jButton1.setText(resourceMap.getString("jButton1.text")); // NOI18N
        jButton1.setName("jButton1"); // NOI18N

        jButton4.setAction(actionMap.get("addDanJuLeiXing")); // NOI18N
        jButton4.setText(resourceMap.getString("jButton4.text")); // NOI18N
        jButton4.setName("jButton4"); // NOI18N

        jButton5.setAction(actionMap.get("updateDanjuleixing")); // NOI18N
        jButton5.setText(resourceMap.getString("jButton5.text")); // NOI18N
        jButton5.setName("jButton5"); // NOI18N

        jButton6.setAction(actionMap.get("deleteDanjuleixing")); // NOI18N
        jButton6.setText(resourceMap.getString("jButton6.text")); // NOI18N
        jButton6.setName("jButton6"); // NOI18N

        jButton7.setAction(actionMap.get("refresh")); // NOI18N
        jButton7.setText(resourceMap.getString("jButton7.text")); // NOI18N
        jButton7.setName("jButton7"); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1)
                    .addComponent(jButton4)
                    .addComponent(jButton5)
                    .addComponent(jButton6)
                    .addComponent(jButton7))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton7))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 313, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DanJuLeiXingJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DanJuLeiXingJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DanJuLeiXingJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DanJuLeiXingJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                DanJuLeiXingJDialog dialog = new DanJuLeiXingJDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    @Action
    public Task reload() {
        return new RefureTask(0);
    }

    private Danjuleixingtb selectedDanjuleixing() {
        if (jTableDanjuleixing.getSelectedRow() >= 0) {
            if (danjuleixings != null) {
                return danjuleixings.get(jTableDanjuleixing.getSelectedRow());
            }
        }
        return null;
    }

    private class RefureTask extends DanjuleixingTask {

        BindingGroup bindingGroup = new BindingGroup();

        RefureTask(int pageIndex) {
            super(pageIndex);
        }

        @Override
        public void onSucceeded(Object object) {

            if (object instanceof Exception) {
                Exception e = (Exception) object;
                AssetMessage.ERRORSYS(e.getMessage());
                logger.error(e);
                return;
            }

            DanjuleixingtbFindEntity danjuleixingtbs = (DanjuleixingtbFindEntity) object;

            if (danjuleixingtbs != null && danjuleixingtbs.getDanjuleixings().size() > 0) {
                count = danjuleixingtbs.getCount();
//                jLabelTotal.setText(((pageIndex - 1) * DanjuleixingTask.pageSize + 1) + "/" + count);
                logger.debug("total:" + count + ",get danjuleixing size:" + danjuleixingtbs.getDanjuleixings().size());

                //存下所有的数据
                danjuleixings = danjuleixingtbs.getDanjuleixings();

                BindTableHelper<Danjuleixingtb> bindTable = new BindTableHelper<Danjuleixingtb>(jTableDanjuleixing, danjuleixings);
                bindTable.createTable(new String[][]{{"danjuleixingId", "编号"}, {"danjuleixingName", "名称"}});
                bindTable.setIntegerType(1);
                bindTable.bind().setColumnWidth(new int[]{0, 100}).setRowHeight(30);
            }
        }
    }

    @Action
    public void addDanJuLeiXing() {
        SwingUtilities.invokeLater(new Runnable() {
            private DanJuLeiXingInfoJDialog danJuLeiXingInfoJDialog;

            @Override
            public void run() {
                if (danJuLeiXingInfoJDialog == null) {
                    JFrame mainFrame = AssetClientApp.getApplication().getMainFrame();
                    danJuLeiXingInfoJDialog = new DanJuLeiXingInfoJDialog(new javax.swing.JFrame(), true);
                    danJuLeiXingInfoJDialog.setLocationRelativeTo(mainFrame);
                }
                danJuLeiXingInfoJDialog.setAddOrUpdate(true);
                AssetClientApp.getApplication().show(danJuLeiXingInfoJDialog);
            }
        });
    }

    @Action
    public void updateDanjuleixing() {
        SwingUtilities.invokeLater(new Runnable() {

            @Override
            public void run() {

                Danjuleixingtb danjuleixing = selectedDanjuleixing();
                if (danjuleixing == null) {
                    AssetMessage.ERRORSYS("请选择单据类型!");
                    return;
                }

                if (danJuLeiXingInfoJDialog == null) {
                    JFrame mainFrame = AssetClientApp.getApplication().getMainFrame();
                    danJuLeiXingInfoJDialog = new DanJuLeiXingInfoJDialog(new javax.swing.JFrame(), true);
                    danJuLeiXingInfoJDialog.setLocationRelativeTo(mainFrame);
                }

                danJuLeiXingInfoJDialog.setAddOrUpdate(false);
                danJuLeiXingInfoJDialog.setUpdatedData(danjuleixing);
                AssetClientApp.getApplication().show(danJuLeiXingInfoJDialog);
            }
        });
    }

    @Action
    public Task deleteDanjuleixing() {
        Danjuleixingtb danjuleixing = selectedDanjuleixing();
        if (danjuleixing == null) {
            AssetMessage.ERRORSYS("请选择单据类型");
            return null;
        }
        int result = AssetMessage.CONFIRM("确定删除单据类型:" + danjuleixing.getDanjuleixingName());
        if (result == JOptionPane.OK_OPTION) {
            return new DeleteDanjuleixingTask(danjuleixing);
        }
        return null;
    }

    private class DeleteDanjuleixingTask extends DanjuleixingUpdateTask {

        DeleteDanjuleixingTask(Danjuleixingtb danjuleixing) {
            // Runs on the EDT.  Copy GUI state that
            // doInBackground() depends on from parameters
            // to DeleteDanjuleixingTask fields, here.
            super(danjuleixing, ENTITY_DELETE);

        }

        @Override
        protected void succeeded(Object result) {
            danJuLeiXingJDialog.reload().execute();
        }
    }

    @Action
    public void pagePrev() {
        pageIndex = pageIndex - 1;
        pageIndex = pageIndex <= 0 ? 1 : pageIndex;
        new RefureTask(pageIndex).execute();
    }

    @Action
    public void pageNext() {
        if (DanjuleixingTask.pageSize * (pageIndex) <= count) {
            pageIndex = pageIndex + 1;
        }
        new RefureTask(pageIndex).execute();
    }

    @Action
    public void exit() {
        this.dispose();
    }

    @Action
    public void refresh() {
        danJuLeiXingJDialog.reload().execute();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableDanjuleixing;
    // End of variables declaration//GEN-END:variables
}
