/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.jskj.asset.client.panel.jichuxinxi;

import com.jskj.asset.client.AssetClientApp;
import com.jskj.asset.client.bean.entity.Kehudanweitb;
import com.jskj.asset.client.bean.entity.KehudanweitbFindEntity;
import com.jskj.asset.client.layout.AssetMessage;
import com.jskj.asset.client.layout.BasePanel;
import com.jskj.asset.client.panel.jichuxinxi.task.KehudanweiTask;
import com.jskj.asset.client.panel.jichuxinxi.task.KehudanweiUpdateTask;
import com.jskj.asset.client.util.BindTableHelper;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import org.apache.log4j.Logger;
import org.jdesktop.application.Action;
import org.jdesktop.application.Task;
import org.jdesktop.beansbinding.BindingGroup;

/**
 *
 * @author huiqi
 */
public class KeHuDanWeiPanel extends BasePanel {

    private final static Logger logger = Logger.getLogger(KeHuDanWeiPanel.class);

    private final KeHuDanWeiPanel keHuDanWeiJDialog;

    private int pageIndex;

    private int count;

    private List<Kehudanweitb> kehudanweis;

    private KeHuDanWeiInfoJDialog keHuDanWeiInfoJDialog;
    
    private final BindTableHelper<Kehudanweitb> bindTable;

    /**
     * Creates new form YiMiaoJDialog
     */
    public KeHuDanWeiPanel() {
        super();
        initComponents();
        keHuDanWeiJDialog = this;
        pageIndex = 1;
        count = 0;

        bindTable = new BindTableHelper<Kehudanweitb>(jTableKehudanwei, new ArrayList<Kehudanweitb>());
        bindTable.createTable(new String[][]{{"kehudanweiId", "编号"}, {"kehudanweiName", "名称"}, {"kehudanweiConstactperson", "联系人"}, {"kehudanweiPhone", "电话"}, {"kehudanweiFax", "传真"}, {"kehudanweiAddr", "单位地址"}, {"kehudanweiRemark", "备注"}});
        bindTable.setIntegerType(1);
        bindTable.bind().setColumnWidth(new int[]{0, 100}).setRowHeight(30);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToolBar1 = new javax.swing.JToolBar();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableKehudanwei = new javax.swing.JTable();

        setName("Form"); // NOI18N

        jToolBar1.setBorder(null);
        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);
        jToolBar1.setBorderPainted(false);
        jToolBar1.setName("jToolBar1"); // NOI18N
        jToolBar1.setOpaque(false);

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(com.jskj.asset.client.AssetClientApp.class).getContext().getActionMap(KeHuDanWeiPanel.class, this);
        jButton6.setAction(actionMap.get("addKeHuDanWei")); // NOI18N
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(com.jskj.asset.client.AssetClientApp.class).getContext().getResourceMap(KeHuDanWeiPanel.class);
        jButton6.setIcon(resourceMap.getIcon("jButton6.icon")); // NOI18N
        jButton6.setText(resourceMap.getString("jButton6.text")); // NOI18N
        jButton6.setBorder(null);
        jButton6.setBorderPainted(false);
        jButton6.setFocusable(false);
        jButton6.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jButton6.setName("jButton6"); // NOI18N
        jButton6.setOpaque(false);
        jToolBar1.add(jButton6);

        jButton7.setAction(actionMap.get("updateKehudanwei")); // NOI18N
        jButton7.setIcon(resourceMap.getIcon("jButton7.icon")); // NOI18N
        jButton7.setText(resourceMap.getString("jButton7.text")); // NOI18N
        jButton7.setBorder(null);
        jButton7.setBorderPainted(false);
        jButton7.setFocusable(false);
        jButton7.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jButton7.setName("jButton7"); // NOI18N
        jButton7.setOpaque(false);
        jToolBar1.add(jButton7);

        jButton8.setAction(actionMap.get("deleteKehudanwei")); // NOI18N
        jButton8.setIcon(resourceMap.getIcon("jButton8.icon")); // NOI18N
        jButton8.setText(resourceMap.getString("jButton8.text")); // NOI18N
        jButton8.setBorder(null);
        jButton8.setBorderPainted(false);
        jButton8.setFocusable(false);
        jButton8.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jButton8.setName("jButton8"); // NOI18N
        jButton8.setOpaque(false);
        jToolBar1.add(jButton8);

        jButton4.setAction(actionMap.get("refresh")); // NOI18N
        jButton4.setIcon(resourceMap.getIcon("jButton4.icon")); // NOI18N
        jButton4.setText(resourceMap.getString("jButton4.text")); // NOI18N
        jButton4.setBorder(null);
        jButton4.setBorderPainted(false);
        jButton4.setFocusable(false);
        jButton4.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jButton4.setName("jButton4"); // NOI18N
        jButton4.setOpaque(false);
        jToolBar1.add(jButton4);

        jButton5.setIcon(resourceMap.getIcon("jButton5.icon")); // NOI18N
        jButton5.setText(resourceMap.getString("jButton5.text")); // NOI18N
        jButton5.setBorder(null);
        jButton5.setBorderPainted(false);
        jButton5.setFocusable(false);
        jButton5.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jButton5.setName("jButton5"); // NOI18N
        jButton5.setOpaque(false);
        jToolBar1.add(jButton5);

        jButton3.setIcon(resourceMap.getIcon("jButton3.icon")); // NOI18N
        jButton3.setText(resourceMap.getString("jButton3.text")); // NOI18N
        jButton3.setBorder(null);
        jButton3.setBorderPainted(false);
        jButton3.setFocusable(false);
        jButton3.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jButton3.setName("jButton3"); // NOI18N
        jButton3.setOpaque(false);
        jToolBar1.add(jButton3);

        jButton2.setIcon(resourceMap.getIcon("jButton2.icon")); // NOI18N
        jButton2.setText(resourceMap.getString("jButton2.text")); // NOI18N
        jButton2.setBorder(null);
        jButton2.setBorderPainted(false);
        jButton2.setFocusable(false);
        jButton2.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jButton2.setName("jButton2"); // NOI18N
        jButton2.setOpaque(false);
        jToolBar1.add(jButton2);

        jButton1.setIcon(resourceMap.getIcon("jButton1.icon")); // NOI18N
        jButton1.setText(resourceMap.getString("jButton1.text")); // NOI18N
        jButton1.setBorder(null);
        jButton1.setBorderPainted(false);
        jButton1.setFocusable(false);
        jButton1.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jButton1.setName("jButton1"); // NOI18N
        jButton1.setOpaque(false);
        jToolBar1.add(jButton1);

        jButton9.setAction(actionMap.get("exit")); // NOI18N
        jButton9.setIcon(resourceMap.getIcon("jButton9.icon")); // NOI18N
        jButton9.setText(resourceMap.getString("jButton9.text")); // NOI18N
        jButton9.setBorder(null);
        jButton9.setBorderPainted(false);
        jButton9.setFocusable(false);
        jButton9.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jButton9.setName("jButton9"); // NOI18N
        jButton9.setOpaque(false);
        jToolBar1.add(jButton9);

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel2.setName("jPanel2"); // NOI18N

        jScrollPane2.setName("jScrollPane2"); // NOI18N

        jTableKehudanwei.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jTableKehudanwei.setName("jTableKehudanwei"); // NOI18N
        jScrollPane2.setViewportView(jTableKehudanwei);
        if (jTableKehudanwei.getColumnModel().getColumnCount() > 0) {
            jTableKehudanwei.getColumnModel().getColumn(0).setPreferredWidth(120);
            jTableKehudanwei.getColumnModel().getColumn(0).setHeaderValue(resourceMap.getString("jTableKehudanwei.columnModel.title0")); // NOI18N
            jTableKehudanwei.getColumnModel().getColumn(1).setPreferredWidth(120);
            jTableKehudanwei.getColumnModel().getColumn(1).setHeaderValue(resourceMap.getString("jTableKehudanwei.columnModel.title1")); // NOI18N
            jTableKehudanwei.getColumnModel().getColumn(2).setHeaderValue(resourceMap.getString("jTable1.columnModel.title5")); // NOI18N
            jTableKehudanwei.getColumnModel().getColumn(3).setHeaderValue(resourceMap.getString("jTable1.columnModel.title2")); // NOI18N
            jTableKehudanwei.getColumnModel().getColumn(4).setHeaderValue(resourceMap.getString("jTable1.columnModel.title3")); // NOI18N
            jTableKehudanwei.getColumnModel().getColumn(5).setHeaderValue(resourceMap.getString("jTable1.columnModel.title6")); // NOI18N
            jTableKehudanwei.getColumnModel().getColumn(6).setHeaderValue(resourceMap.getString("jTable1.columnModel.title4")); // NOI18N
        }

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 422, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, 878, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(KeHuDanWeiPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(KeHuDanWeiPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(KeHuDanWeiPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(KeHuDanWeiPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

//        /* Create and display the dialog */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                KeHuDanWeiJDialog dialog = new KeHuDanWeiJDialog(new javax.swing.JFrame(), true);
//                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
//                    @Override
//                    public void windowClosing(java.awt.event.WindowEvent e) {
//                        System.exit(0);
//                    }
//                });
//                dialog.setVisible(true);
//            }
//        });
    }

    @Action
    public Task reload() {
        return new RefureTask(0);
    }

    private Kehudanweitb selectedKehudanwei() {
        if (jTableKehudanwei.getSelectedRow() >= 0) {
            if (kehudanweis != null) {
                return kehudanweis.get(jTableKehudanwei.getSelectedRow());
            }
        }
        return null;
    }

    @Override
    public Task reload(Object param) {
        return null;
    }

    private class RefureTask extends KehudanweiTask {

        BindingGroup bindingGroup = new BindingGroup();

        RefureTask(int pageIndex) {
            super(pageIndex);
        }

        @Override
        public void onSucceeded(Object object) {

            if (object instanceof Exception) {
                Exception e = (Exception) object;
                AssetMessage.ERRORSYS(e.getMessage());
                logger.error(e);
                return;
            }

            KehudanweitbFindEntity danjuleixingtbs = (KehudanweitbFindEntity) object;

            if (danjuleixingtbs != null && danjuleixingtbs.getResult()!=null && danjuleixingtbs.getResult().size() > 0) {
                count = danjuleixingtbs.getCount();
//                jLabelTotal.setText(((pageIndex - 1) * KehudanweiTask.pageSize + 1) + "/" + count);
                logger.debug("total:" + count + ",get danjuleixing size:" + danjuleixingtbs.getResult().size());

                //存下所有的数据
                kehudanweis = danjuleixingtbs.getResult();
                
                bindTable.refreshData(kehudanweis);

            }
        }
    }

    @Action
    public void addKeHuDanWei() {
        SwingUtilities.invokeLater(new Runnable() {
            private KeHuDanWeiInfoJDialog keHuDanWeiInfoJDialog;

            @Override
            public void run() {
                if (keHuDanWeiInfoJDialog == null) {
                    JFrame mainFrame = AssetClientApp.getApplication().getMainFrame();
                    keHuDanWeiInfoJDialog = new KeHuDanWeiInfoJDialog();
                    keHuDanWeiInfoJDialog.setLocationRelativeTo(mainFrame);
                }
                keHuDanWeiInfoJDialog.setAddOrUpdate(true);
                AssetClientApp.getApplication().show(keHuDanWeiInfoJDialog);
            }
        });
    }

    @Action
    public void updateKehudanwei() {
        SwingUtilities.invokeLater(new Runnable() {

            @Override
            public void run() {

                Kehudanweitb danjuleixing = selectedKehudanwei();
                if (danjuleixing == null) {
                    AssetMessage.ERRORSYS("请选择客户单位!");
                    return;
                }

                if (keHuDanWeiInfoJDialog == null) {
                    JFrame mainFrame = AssetClientApp.getApplication().getMainFrame();
                    keHuDanWeiInfoJDialog = new KeHuDanWeiInfoJDialog();
                    keHuDanWeiInfoJDialog.setLocationRelativeTo(mainFrame);
                }

                keHuDanWeiInfoJDialog.setAddOrUpdate(false);
                keHuDanWeiInfoJDialog.setUpdatedData(danjuleixing);
                AssetClientApp.getApplication().show(keHuDanWeiInfoJDialog);
            }
        });
    }

    @Action
    public Task deleteKehudanwei() {
        Kehudanweitb danjuleixing = selectedKehudanwei();
        if (danjuleixing == null) {
            AssetMessage.ERRORSYS("请选择客户单位");
            return null;
        }
        int result = AssetMessage.CONFIRM("确定删除客户单位:" + danjuleixing.getKehudanweiName());
        if (result == JOptionPane.OK_OPTION) {
            return new DeleteKehudanweiTask(danjuleixing);
        }
        return null;
    }

    private class DeleteKehudanweiTask extends KehudanweiUpdateTask {

        DeleteKehudanweiTask(Kehudanweitb danjuleixing) {
            // Runs on the EDT.  Copy GUI state that
            // doInBackground() depends on from parameters
            // to DeleteKehudanweiTask fields, here.
            super(danjuleixing, ENTITY_DELETE);

        }

        @Override
        protected void succeeded(Object result) {
            keHuDanWeiJDialog.reload().execute();
        }
    }

    @Action
    public void pagePrev() {
        pageIndex = pageIndex - 1;
        pageIndex = pageIndex <= 0 ? 1 : pageIndex;
        new RefureTask(pageIndex).execute();
    }

    @Action
    public void pageNext() {
        if (KehudanweiTask.pageSize * (pageIndex) <= count) {
            pageIndex = pageIndex + 1;
        }
        new RefureTask(pageIndex).execute();
    }

    @Action
    public void exit() {
    }

    @Action
    public void refresh() {
        keHuDanWeiJDialog.reload().execute();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTableKehudanwei;
    private javax.swing.JToolBar jToolBar1;
    // End of variables declaration//GEN-END:variables
}
