/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.jskj.asset.client.panel.message;

import com.jskj.asset.client.AssetClientApp;
import com.jskj.asset.client.AssetClientView;
import static com.jskj.asset.client.layout.AssetMessage.INFO_MESSAGE;
import com.jskj.asset.client.layout.BasePanel;
import com.jskj.asset.client.layout.PopupButton;
import com.jskj.asset.client.util.DateHelper;
import java.util.Date;
import java.util.List;
import java.util.TimerTask;
import javax.swing.GroupLayout;
import javax.swing.GroupLayout.ParallelGroup;
import javax.swing.JLabel;
import org.apache.log4j.Logger;
import org.jdesktop.application.Action;
import org.jdesktop.application.Application;
import org.jdesktop.application.Task;

/**
 *
 * @author 305027939
 */
public class MessagePanel extends BasePanel {

    private Date startDate;
    private Date startShenpihouDate;
    private final static Logger logger = Logger.getLogger(MessagePanel.class);
    private boolean displayTask;
    private boolean displayApplication;
    private boolean displayShenpi;
    private MessageConfig messageConf;

    /**
     * Creates new form MessagePanel
     */
    public MessagePanel() {
        initComponents();
        displayTask = true;
        displayApplication = true;
        displayShenpi = true;
        startDate = DateHelper.currentDateAdd(-30);
        startShenpihouDate = DateHelper.currentDateAdd(-15);
        messageConf = new MessageConfig(((PopupButton) jButton2)) {
            AssetClientView clientView = (AssetClientView) Application.getInstance(AssetClientApp.class).getMainView();
            java.util.Timer timer = new java.util.Timer(true);
            TimerTask timetask;

            @Override
            public void savedData(Date app,Date shenpidata, boolean autorefresh, final int selectSec, boolean task, boolean application,boolean shenpi) {
                startDate = app;
                displayTask = task;
                displayApplication = application;
                displayShenpi = shenpi;
                startShenpihouDate = shenpidata;

                if (autorefresh) {

                    logger.info(selectSec + "s loop task");

                    clientView.setStatus("定义定时任务:" + selectSec + "秒循环.", INFO_MESSAGE);

                    if (timetask != null) {
                        timetask.cancel();
                    }

                    timetask = new TimerTask() {
                        @Override
                        public void run() {
                            clientView.setStatus("定时任务已经启动.", INFO_MESSAGE);
                            MessagePanel.this.refersh().execute();
                        }
                    };

                    timer.schedule(timetask, 2000, selectSec * 1000);

                } else {

                    if (timetask != null) {
                        timetask.cancel();
                        clientView.setStatus("定时任务已经取消.", INFO_MESSAGE);
                    }
                    MessagePanel.this.refersh().execute();
                }
            }
        };
        ((PopupButton) jButton2).registerPopup(messageConf);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        messageMain = new javax.swing.JPanel();
        messageLabel = new javax.swing.JLabel();
        jToolBar1 = new javax.swing.JToolBar();
        jButton1 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JToolBar.Separator();
        jButton2 = new PopupButton();

        setName("Form"); // NOI18N

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        messageMain.setName("messageMain"); // NOI18N

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(com.jskj.asset.client.AssetClientApp.class).getContext().getResourceMap(MessagePanel.class);
        messageLabel.setFont(resourceMap.getFont("messageLabel.font")); // NOI18N
        messageLabel.setText(resourceMap.getString("messageLabel.text")); // NOI18N
        messageLabel.setName("messageLabel"); // NOI18N

        javax.swing.GroupLayout messageMainLayout = new javax.swing.GroupLayout(messageMain);
        messageMain.setLayout(messageMainLayout);
        messageMainLayout.setHorizontalGroup(
            messageMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(messageMainLayout.createSequentialGroup()
                .addComponent(messageLabel)
                .addContainerGap(587, Short.MAX_VALUE))
        );
        messageMainLayout.setVerticalGroup(
            messageMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(messageMainLayout.createSequentialGroup()
                .addComponent(messageLabel)
                .addGap(274, 274, 274))
        );

        jScrollPane1.setViewportView(messageMain);

        jToolBar1.setFloatable(false);
        jToolBar1.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jToolBar1.setRollover(true);
        jToolBar1.setBorderPainted(false);
        jToolBar1.setName("jToolBar1"); // NOI18N
        jToolBar1.setOpaque(false);

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(com.jskj.asset.client.AssetClientApp.class).getContext().getActionMap(MessagePanel.class, this);
        jButton1.setAction(actionMap.get("refersh")); // NOI18N
        jButton1.setFont(resourceMap.getFont("jButton1.font")); // NOI18N
        jButton1.setIcon(resourceMap.getIcon("jButton1.icon")); // NOI18N
        jButton1.setText(resourceMap.getString("jButton1.text")); // NOI18N
        jButton1.setBorder(null);
        jButton1.setBorderPainted(false);
        jButton1.setFocusable(false);
        jButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton1.setName("jButton1"); // NOI18N
        jButton1.setOpaque(false);
        jButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(jButton1);

        jSeparator1.setName("jSeparator1"); // NOI18N
        jToolBar1.add(jSeparator1);

        jButton2.setAction(actionMap.get("popupConfig")); // NOI18N
        jButton2.setFont(resourceMap.getFont("jButton2.font")); // NOI18N
        jButton2.setIcon(resourceMap.getIcon("jButton2.icon")); // NOI18N
        jButton2.setText(resourceMap.getString("jButton2.text")); // NOI18N
        jButton2.setBorder(null);
        jButton2.setBorderPainted(false);
        jButton2.setFocusable(false);
        jButton2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton2.setName("jButton2"); // NOI18N
        jButton2.setOpaque(false);
        jButton2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(jButton2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 456, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JToolBar.Separator jSeparator1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JLabel messageLabel;
    private javax.swing.JPanel messageMain;
    // End of variables declaration//GEN-END:variables

    
    @Action
    public Task refersh(){
         return new MyTaskFindTask(startDate,null,startShenpihouDate,null, displayTask, displayApplication,displayShenpi) {

            @Override
            public void layout(List<JLabel> labelArray) {

                messageMain.removeAll();

                javax.swing.GroupLayout layout = new javax.swing.GroupLayout(messageMain);
                messageMain.setLayout(layout);

                //这里构造对个JLABEL，这样可以就可以单行触发事件，有没有更好的方法？HTML似乎在这里不好用了？？？？
                ParallelGroup paraHorizGroup = layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING);
                GroupLayout.SequentialGroup seqVertGroup = layout.createSequentialGroup();

                if (labelArray != null && labelArray.size() > 0) {
                    for (JLabel label : labelArray) {
                        paraHorizGroup.addComponent(label, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE);
                        seqVertGroup.addComponent(label);
                    }
                }

//                paraHorizGroup.addComponent(messageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE);
//                seqVertGroup.addComponent(messageLabel);

                layout.setHorizontalGroup(paraHorizGroup);

                layout.setVerticalGroup(
                        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(seqVertGroup));
                messageMain.doLayout();
            }
        };
    }
    
    @Override
    @Action
    public Task reload() {
        messageConf.save();
       return null;
    }

    @Override
    public Task reload(Object param) {
        return null;
    }

    @Action
    public void popupConfig() {
    }
}
